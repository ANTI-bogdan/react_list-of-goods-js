{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","goods","preperedGoods","sort","good1","good2","localeCompare","reverse","getPreparedGoods","className","type","cn","onClick","length","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAoB,SAyBnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EA3BR,SAA0BC,EAAOL,EAAWE,GAC1C,IAAMI,EAAa,YAAOD,GAmB1B,OAjBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAC7B,KAAKZ,EACH,OAAOW,EAAMR,GAAaS,EAAMT,GAClC,QACE,OAAO,MAKXE,GACFI,EAAcK,UAGTL,EAOcM,CAAiBjB,EAAiBK,EAAWE,GAElE,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IAAG,iBACD,CAAE,WAAYf,IAAcJ,IAChCoB,QAAS,kBAAMf,EAAaL,IAL9B,iCAUA,wBACEkB,KAAK,SACLD,UACEE,IAAG,oBACD,CAAE,WAAYf,IAAcH,IAChCmB,QAAS,kBAAMf,EAAaJ,IAL9B,4BAUA,wBACEiB,KAAK,SACLD,UACEE,IAAG,oBACD,CAAE,YAAab,IACnBc,QAAS,kBAAMb,GAAeD,IALhC,qBAUA,wBACEY,KAAK,SACLD,UACEE,IAAG,4BACD,CAAE,aAAcf,EAAUiB,SAC9BD,QAAS,kBAAMf,EAAa,KAL9B,sBAYF,6BACGG,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,aC/FbC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.41de4f66.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, sortField, isReversed) {\n  const preperedGoods = [...goods];\n\n  if (sortField) {\n    preperedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABET:\n          return good1.localeCompare(good2);\n        case SORT_FIELD_LENGTH:\n          return good1[sortField] - good2[sortField];\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preperedGoods.reverse();\n  }\n\n  return preperedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortField, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn('button is-info',\n              { 'is-light': sortField !== SORT_FIELD_ALPHABET })}\n          onClick={() => setSortField(SORT_FIELD_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button is-success',\n              { 'is-light': sortField !== SORT_FIELD_LENGTH })}\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button is-warning',\n              { 'is-light': !isReversed })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button is-danger is-light',\n              { 'is-hidden': !sortField.length })}\n          onClick={() => setSortField('')}\n        >\n          Reset\n        </button>\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}